#! /usr/local/bin/bash

# Clean out the test_results directory.
# Parse all requirement blocks in the test_data directory.
# Capture error messages in the test_results directory.
#  Empty result files indicate complete parsing with no errors.

dirs=()
while [[ $# > 0 ]]
do
  dirs+=($1)
  shift
done
if [[ ${#dirs} = 0 ]]
then
  dirs=(major minor degree conc other)
fi
SECONDS=0
let $((total = 0))
for dir in ${dirs[@]}
do
  block_type=${dir##*.}
  block_str=`echo $block_type|tr a-z A-Z`
  rm -fr test_results.$block_type
  mkdir test_results.$block_type
  num_files=`dir test_data.$block_type|wc -l`
  echo -e "\nThere are $num_files $block_str files"
  let count=0
  for file in test_data.$block_type/*
  do
    [[ $DEBUG ]] && echo  -e "$count/$num_files\t$file"
    let $((count = count + 1))
    grun ReqBlock req_block < "$file" > "${file/data/results}" 2>&1
    echo -en "               \r$count/$num_files\r"
  done
  echo -e "\n$block_str completed after $SECONDS seconds"
  let $((total += $SECONDS))
  SECONDS=0
done
./count_results.py
let $((mins = total/60))
let $((secs = total - (mins * 60) ))
printf "%02d:%02d total time" $mins $secs
